<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.offcn.dao.MessageMapper">
  <resultMap id="BaseResultMap" type="com.offcn.bean.Message">
    <id column="mid" jdbcType="INTEGER" property="mid" />
    <result column="mtitle" jdbcType="VARCHAR" property="mtitle" />
    <result column="mdate" jdbcType="TIMESTAMP" property="mdate" />
    <result column="mstatu" jdbcType="INTEGER" property="mstatu" />
    <result column="sender" jdbcType="VARCHAR" property="sender" />
    <result column="reciver" jdbcType="VARCHAR" property="reciver" />
    <result column="mtype" jdbcType="INTEGER" property="mtype" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="annex" jdbcType="VARCHAR" property="annex" />
    <result column="remark1" jdbcType="VARCHAR" property="remark1" />
    <result column="remark2" jdbcType="VARCHAR" property="remark2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mid, mtitle, mdate, mstatu, sender, reciver, mtype, message, annex, remark1, remark2
  </sql>
  <select id="selectByExample" parameterType="com.offcn.bean.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from message
    where mid = #{mid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where mid = #{mid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.offcn.bean.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.offcn.bean.Message">
    insert into message (mid, mtitle, mdate, 
      mstatu, sender, reciver, 
      mtype, message, annex, 
      remark1, remark2)
    values (#{mid,jdbcType=INTEGER}, #{mtitle,jdbcType=VARCHAR}, #{mdate,jdbcType=TIMESTAMP}, 
      #{mstatu,jdbcType=INTEGER}, #{sender,jdbcType=VARCHAR}, #{reciver,jdbcType=VARCHAR}, 
      #{mtype,jdbcType=INTEGER}, #{message,jdbcType=VARCHAR}, #{annex,jdbcType=VARCHAR}, 
      #{remark1,jdbcType=VARCHAR}, #{remark2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.offcn.bean.Message">
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        mid,
      </if>
      <if test="mtitle != null">
        mtitle,
      </if>
      <if test="mdate != null">
        mdate,
      </if>
      <if test="mstatu != null">
        mstatu,
      </if>
      <if test="sender != null">
        sender,
      </if>
      <if test="reciver != null">
        reciver,
      </if>
      <if test="mtype != null">
        mtype,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="annex != null">
        annex,
      </if>
      <if test="remark1 != null">
        remark1,
      </if>
      <if test="remark2 != null">
        remark2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="mtitle != null">
        #{mtitle,jdbcType=VARCHAR},
      </if>
      <if test="mdate != null">
        #{mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="mstatu != null">
        #{mstatu,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="reciver != null">
        #{reciver,jdbcType=VARCHAR},
      </if>
      <if test="mtype != null">
        #{mtype,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="annex != null">
        #{annex,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        #{remark2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.offcn.bean.MessageExample" resultType="java.lang.Long">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.mid != null">
        mid = #{record.mid,jdbcType=INTEGER},
      </if>
      <if test="record.mtitle != null">
        mtitle = #{record.mtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.mdate != null">
        mdate = #{record.mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mstatu != null">
        mstatu = #{record.mstatu,jdbcType=INTEGER},
      </if>
      <if test="record.sender != null">
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.reciver != null">
        reciver = #{record.reciver,jdbcType=VARCHAR},
      </if>
      <if test="record.mtype != null">
        mtype = #{record.mtype,jdbcType=INTEGER},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.annex != null">
        annex = #{record.annex,jdbcType=VARCHAR},
      </if>
      <if test="record.remark1 != null">
        remark1 = #{record.remark1,jdbcType=VARCHAR},
      </if>
      <if test="record.remark2 != null">
        remark2 = #{record.remark2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set mid = #{record.mid,jdbcType=INTEGER},
      mtitle = #{record.mtitle,jdbcType=VARCHAR},
      mdate = #{record.mdate,jdbcType=TIMESTAMP},
      mstatu = #{record.mstatu,jdbcType=INTEGER},
      sender = #{record.sender,jdbcType=VARCHAR},
      reciver = #{record.reciver,jdbcType=VARCHAR},
      mtype = #{record.mtype,jdbcType=INTEGER},
      message = #{record.message,jdbcType=VARCHAR},
      annex = #{record.annex,jdbcType=VARCHAR},
      remark1 = #{record.remark1,jdbcType=VARCHAR},
      remark2 = #{record.remark2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.offcn.bean.Message">
    update message
    <set>
      <if test="mtitle != null">
        mtitle = #{mtitle,jdbcType=VARCHAR},
      </if>
      <if test="mdate != null">
        mdate = #{mdate,jdbcType=TIMESTAMP},
      </if>
      <if test="mstatu != null">
        mstatu = #{mstatu,jdbcType=INTEGER},
      </if>
      <if test="sender != null">
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="reciver != null">
        reciver = #{reciver,jdbcType=VARCHAR},
      </if>
      <if test="mtype != null">
        mtype = #{mtype,jdbcType=INTEGER},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="annex != null">
        annex = #{annex,jdbcType=VARCHAR},
      </if>
      <if test="remark1 != null">
        remark1 = #{remark1,jdbcType=VARCHAR},
      </if>
      <if test="remark2 != null">
        remark2 = #{remark2,jdbcType=VARCHAR},
      </if>
    </set>
    where mid = #{mid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.offcn.bean.Message">
    update message
    set mtitle = #{mtitle,jdbcType=VARCHAR},
      mdate = #{mdate,jdbcType=TIMESTAMP},
      mstatu = #{mstatu,jdbcType=INTEGER},
      sender = #{sender,jdbcType=VARCHAR},
      reciver = #{reciver,jdbcType=VARCHAR},
      mtype = #{mtype,jdbcType=INTEGER},
      message = #{message,jdbcType=VARCHAR},
      annex = #{annex,jdbcType=VARCHAR},
      remark1 = #{remark1,jdbcType=VARCHAR},
      remark2 = #{remark2,jdbcType=VARCHAR}
    where mid = #{mid,jdbcType=INTEGER}
  </update>

  <select id="findSendMessageByCondition" resultMap="BaseResultMap">
    select * from message
    <where>
      <if test="reciver!=null">
        reciver like concat('%',#{reciver},'%')
      </if>
      and sender=#{sender}
    </where>
    limit #{limitStart},#{rows}
  </select>

  <select id="getRowsByCondition" resultType="_int">
    select count(1) from message
    <where>
      <if test="reciver!=null">
        reciver like concat('%',#{reciver},'%')
      </if>
        and sender=#{sender}
    </where>
  </select>

  <select id="findSendMessageByCondition1" resultMap="BaseResultMap">
    select * from message
    <where>
      <if test="sender!=null">
        sender like concat('%',#{sender},'%')
      </if>
      and reciver=#{reciver}
    </where>
    limit #{limitStart},#{rows}
  </select>

  <select id="getRowsByCondition1" resultType="_int">
    select count(1) from message
    <where>
      <if test="sender!=null">
        sender like concat('%',#{sender},'%')
      </if>
      and reciver=#{reciver}
    </where>
  </select>
</mapper>